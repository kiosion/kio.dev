@tailwind base;
@tailwind components;
@tailwind utilities;

@import url('https://fonts.googleapis.com/css2?family=Comic+Neue:ital,wght@0,300;0,400;0,700;1,300;1,400;1,700');

@import 'styles/colors';
@import 'styles/fonts';

.categoryTag {
  @apply font-code text-base capitalize px-2 py-0.5 bg-stone-200/60 dark:bg-stone-800/60 hover:bg-stone-300/60 dark:hover:bg-stone-700/80 rounded-md transition-[background-color,border-color] border border-stone-400/60 dark:border-stone-500/60;
  &-sm {
    @apply font-code text-sm capitalize px-2 py-0.5 bg-stone-300/20 dark:bg-stone-800/60 hover:bg-stone-300/60 dark:hover:bg-stone-700/60 border border-stone-400/60 dark:border-stone-500/80 rounded-md transition-[background-color,border-color];
  }
}

.focusOutline {
  @apply focus-visible:outline outline-offset-4 outline-violet-400 outline-2;
  &-sm {
    @apply focus-visible:outline outline-offset-2 outline-violet-400 outline-2;
  }
}

body,
html {
  height: 100vh;
  transition: background 150ms ease;
}

body,
html,
div,
span,
p,
img {
  box-sizing: border-box;
}

body {
  @apply h-full w-full overflow-x-hidden;

  @media (min-width: 0px) {
    background-color: $stone-800;
  }
  @media (min-width: 830px) {
    background-color: $stone-900;
  }

  --textColour: $stone-50;

  &.light {
    @media (min-width: 0px) {
      background-color: $stone-200;
    }
    @media (min-width: 830px) {
      background-color: $stone-100;
    }

    --textColour: $stone-900;
  }
  &:not(.is-loaded) {
    cursor: wait !important;
  }
  &.is-loading {
    cursor: progress !important;

    & a,
    & button,
    & [role='button'] {
      cursor: wait !important;
    }
  }
  &.custom-cursor {
    &,
    &.is-loading,
    &:not(.is-loaded),
    .cursor-pointer,
    a,
    button,
    [role='button'] {
      cursor: none !important;
    }
  }
}

.not-allowed {
  &,
  & a,
  & button,
  & [role='button'] {
    cursor: not-allowed !important;
  }
}

::selection {
  background: rgba($violet-300, 0.8);
  color: $stone-900;
}

.click-through {
  pointer-events: none;

  a,
  button,
  [role='button'] {
    pointer-events: visible;
  }
}

.focus:ring-2 {
  &,
  &:focus {
    outline: none !important;
  }
}
