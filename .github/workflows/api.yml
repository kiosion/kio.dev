name: CI - API

on:
  push:
    branches: [ "main" ]
    paths-ignore:
      - '**/*.md'
      - 'LICENSE'
      - '**/.husky'
      - 'sanity-cms/**'
      - 'svelte-app/**'
      - 'express-api/**'

concurrency: 
  group: api
  cancel-in-progress: true

jobs:
  # TODO: Test job, lint job, then build + deploy
  # test:
  #   name: Test
  #   environment: API
  #   runs-on: self-hosted
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3
  #     - name: Install Dependencies
  #       run: (cd ./elixir-api && make install)
  #     - name: Run tests
  #       run: (cd ./elixir-api && make test)
  deploy:
    name: Build and Deploy
    environment: API
    runs-on: self-hosted
    strategy:
      matrix:
        env: [ 'dev', 'prod' ]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build for ${{ matrix.env }}
        env:
          SANITY_TOKEN: ${{ secrets.SANITY_TOKEN }}
          SANITY_PROJECT_ID: ${{ secrets.SANITY_PROJECT_ID }}
          API_TOKEN: ${{ secrets.API_TOKEN }}
        run: |
          cd ./elixir-api
          if [ "${{ matrix.env }}" = "dev" ]; then
            make prod-dev
          else
            make prod
          fi
      - name: Deploy to ${{{ matrix.env }}}
        run: |
          cd ./elixir-api
          if [ "${{ matrix.env }}" = "dev" ]; then
            make run-prod-dev
          else
            make run-prod
          fi
      - name: Check status
        run: |
          sleep 15
          docker ps | grep hexerei:${{ matrix.env }} || exit 1

  # TODO: Remove after
  # build-dev:
  #   name: Build Development
  #   environment: API
  #   runs-on: self-hosted
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3
  #     - name: Build for development
  #       env:
  #         SANITY_TOKEN: ${{ secrets.SANITY_TOKEN }}
  #         SANITY_PROJECT_ID: ${{ secrets.SANITY_PROJECT_ID }}
  #         API_TOKEN: ${{ secrets.DEV_API_TOKEN }}
  #       run: cd ./elixir-api && make prod-dev

  # deploy-dev:
  #   name: Deploy Development
  #   environment: API
  #   needs: [ build-dev ]
  #   runs-on: self-hosted
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3
  #     - name: Deploy to development
  #       run: cd ./elixir-api && make run-prod-dev
  #     - name: Status check
  #       run: sleep 15 && docker ps | grep hexerei:dev || exit 1

  # build-prod:
  #   name: Build Production
  #   environment: API
  #   needs: [ deploy-dev ]
  #   runs-on: self-hosted
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3
  #     - name: Build for production
  #       env:
  #         SANITY_TOKEN: ${{ secrets.SANITY_TOKEN }}
  #         SANITY_PROJECT_ID: ${{ secrets.SANITY_PROJECT_ID }}
  #         API_TOKEN: ${{ secrets.API_TOKEN }}
  #       run: cd ./elixir-api && make prod

  # deploy-prod:
  #   name: Deploy Production
  #   environment: API
  #   needs: [ build-prod ]
  #   runs-on: self-hosted
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3
  #     - name: Deploy to production
  #       run: cd ./elixir-api && make run-prod
  #     - name: Status check
  #       run: sleep 15 && docker ps | grep hexerei:prod || exit 1
