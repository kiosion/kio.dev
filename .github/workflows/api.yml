name: CI - API

on:
  push:
    branches: [ "main" ]
    paths-ignore:
      - '**/*.md'
      - 'LICENSE'
      - '**/.husky'
      - 'sanity-cms/**'
      - 'svelte-app/**'
      - 'express-api/**'

concurrency: 
  group: api
  cancel-in-progress: true

jobs:
  test:
    name: Test
    environment: API
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Elixir
        uses: erlef/setup-elixir@v1
        with:
          otp-version: 25
          elixir-version: 1.13
          rebar3-version: 3.16
      - name: Install Dependencies
        run: (cd ./elixir-api && make install)
      - name: Run tests
        run: |
          cd ./elixir-api &&\
          touch ./.env &&\
          echo "export SANITY_TOKEN=${{ secrets.SANITY_TOKEN }}" >> .env &&\
          echo "export SANITY_PROJECT_ID=${{ secrets.SANITY_PROJECT_ID }}" >> .env &&\
          echo "export API_TOKEN=${{ secrets.DEV_API_TOKEN }}" >> .env &&\
          make test

  build-dev:
    name: Build Development
    environment: API
    needs: [ test ]
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build for development
        env:
          SANITY_TOKEN: ${{ secrets.SANITY_TOKEN }}
          SANITY_PROJECT_ID: ${{ secrets.SANITY_PROJECT_ID }}
          API_TOKEN: ${{ secrets.DEV_API_TOKEN }}
          GCLOUD_KEY: ${{ secrets.DEV_GCLOUD_KEY }}
        run: cd ./elixir-api && make prod-dev

  deploy-dev:
    name: Deploy Development
    environment: API
    needs: [ test, build-dev ]
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Deploy to development
        run: cd ./elixir-api && make run-prod-dev
      - name: Status check
        run: sleep 15 && docker ps | grep hexerei:dev || exit 1

  build-prod:
    name: Build Production
    environment: API
    needs: [ test, deploy-dev ]
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build for production
        env:
          SANITY_TOKEN: ${{ secrets.SANITY_TOKEN }}
          SANITY_PROJECT_ID: ${{ secrets.SANITY_PROJECT_ID }}
          API_TOKEN: ${{ secrets.API_TOKEN }}
          GCLOUD_KEY: ${{ secrets.GCLOUD_KEY }}
        run: cd ./elixir-api && make prod

  deploy-prod:
    name: Deploy Production
    environment: API
    needs: [ test, build-prod ]
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Deploy to production
        run: cd ./elixir-api && make run-prod
      - name: Status check
        run: sleep 15 && docker ps | grep hexerei:prod || exit 1
