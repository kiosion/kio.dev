name: CI - Sanity

on:
  push:
    branches: [ "main" ]
    paths-ignore:
      - '**/*.md'
      - 'LICENSE'
      - '**/.husky'
      - 'svelte-app/**'
      - 'express-api/**'
      - 'elixir-api/**'

concurrency: 
  group: sanity
  cancel-in-progress: true

jobs:
  build:
    environment: Sanity
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7
          run_install: false
      - name: Use node_modules cache
        uses: actions/cache@v3
        id: nm-cache
        with:
          path: 'sanity-cms/node_modules'
          key: ${{ runner.os }}-nm-16-${{ hashFiles('sanity-cms/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-nm-16-
      - name: Install Dependencies
        if: steps.nm-cache.outputs.cache-hit != 'true'
        run: (cd ./sanity-cms && pnpm install --frozen-lockfile)
      # - name: Lint check
      #   run: (cd ./sanity-cms && yarn lint)
      - name: Build for development
        run: (cd ./sanity-cms && SANITY_STUDIO_DATASET="dev" pnpm sanity build)
      - name: Deploy development studio
        env:
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_DEV_SITE_ID }}
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        run: (cd ./sanity-cms && pnpm netlify deploy --dir=./dist --prod)
      - name: Build for production
        run: (cd ./sanity-cms && pnpm sanity build)
      - name: Deploy production studio
        env:
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        run: (cd ./sanity-cms && pnpm netlify deploy --dir=./dist --prod)
